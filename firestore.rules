rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isTherapist() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'therapist';
    }
    
    function isParentOf(childId) {
      let childData = get(/databases/$(database)/documents/children/$(childId)).data;
      // Check both parent and parentId fields for backward compatibility
      return request.auth != null && (
        isOwner(childData.parent) || 
        isOwner(childData.parentId)
      );
    }
    
    // DEVELOPMENT MODE: Allow all operations for testing
    // WARNING: REMOVE BEFORE PRODUCTION DEPLOYMENT
    match /{document=**} {
      allow read, write: if true;
    }
    
    // Keep the specific rules below for reference, but they won't be applied
    // while the development mode rule above is active
    
    // User collection rules
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Children collection rules
    match /children/{childId} {
      allow read: if request.auth != null && 
                  (isAdmin() || 
                   isOwner(resource.data.parent) || 
                   isOwner(resource.data.parentId) || 
                   isTherapist() && resource.data.therapistId == request.auth.uid);
      
      allow create: if request.auth != null && 
                   (isAdmin() || 
                    isOwner(request.resource.data.parent) || 
                    isOwner(request.resource.data.parentId) || 
                    isTherapist() && request.resource.data.therapistId == request.auth.uid);
                    
      allow update: if request.auth != null && 
                   (isAdmin() || 
                    isOwner(resource.data.parent) || 
                    isOwner(resource.data.parentId) || 
                    isTherapist() && resource.data.therapistId == request.auth.uid);
                    
      allow delete: if request.auth != null && 
                   (isAdmin() || 
                    isOwner(resource.data.parent) || 
                    isOwner(resource.data.parentId));
    }
    
    // Emotions collection rules
    match /emotions/{emotionId} {
      allow read, write: if request.auth != null;
    }
    
    // Public collection - accessible to anyone
    match /public/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Alert rules
    match /alerts/{alertId} {
      allow read: if request.auth != null && 
                  (isAdmin() || 
                   get(/databases/$(database)/documents/children/$(resource.data.childId)).data.parent == request.auth.uid ||
                   get(/databases/$(database)/documents/children/$(resource.data.childId)).data.parentId == request.auth.uid ||
                   isTherapist() && get(/databases/$(database)/documents/children/$(resource.data.childId)).data.therapistId == request.auth.uid);
      allow write: if request.auth != null;
    }
    
    // Suggestions rules
    match /suggestions/{document=**} {
      allow read: if request.auth != null;
      allow write: if isAdmin() || isTherapist();
    }
    
    // Missions rules
    match /missions/{missionId} {
      allow read: if request.auth != null;
      allow write: if isAdmin() || isTherapist();
    }
    
    // User badges rules
    match /user_badges/{badgeId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Conversation rules
    match /conversations/{conversationId} {
      allow read, write: if request.auth != null && 
                         (isOwner(resource.data.userId) || 
                          isTherapist() && 
                          get(/databases/$(database)/documents/children/$(resource.data.childId)).data.therapistId == request.auth.uid);
    }
    
    // Sessions rules
    match /sessions/{sessionId} {
      allow read: if request.auth != null && 
                 (isAdmin() || 
                  isOwner(resource.data.userId) || 
                  isTherapist() && resource.data.therapistId == request.auth.uid);
      allow write: if request.auth != null && 
                  (isAdmin() || 
                   isTherapist() && request.resource.data.therapistId == request.auth.uid);
    }
    
    // Community posts rules
    match /community_posts/{postId} {
      allow read, write: if true;
    }
  }
} 